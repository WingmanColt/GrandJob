@inject IConfiguration config
@inject UserManager<User> _userManager
@inject ICompanyService _companyService

@model ActivityViewModel
@{
    var user = await _userManager.GetUserAsync(User);

    string code = null;

    string _ImagePath = config.GetSection("MySettings").GetSection("UserPicturePath").Value;
    string Url = config.GetSection("MySettings").GetSection("SiteUrl").Value;

    string SenderImageUrl;
    User sender;
}
    <section class="ls-section">
      <div class="filters-backdrop"></div>

      <div class="ls-cotainer">
        <div class="filters-column hide-left">
          <div class="inner-column">
            <div class="filters-outer" style="padding:30px 0 0 0;">
              <button type="button" class="theme-btn close-filters">X</button>

              <!-- Filter Block -->
              <div class="filter-block">
            <div class="default-tabs style-two tabs-box">
              <!--Tabs Box-->
              <ul class="tab-buttons clearfix">
                <li class="tab-btn active-btn" data-tab="#tab1" data-toggle="tooltip" data-placement="top" title="Съобщения" ><span class="las la-inbox"></span></li>
                <li class="tab-btn" data-tab="#tab2" data-toggle="tooltip" data-placement="top" title="Задачи" ><span class="la la-tasks"></span></li>
                <li class="tab-btn" data-tab="#tab3" data-toggle="tooltip" data-placement="top" title="Настройки"><span class="la la-cog" data-placement="Задачи"></span></li>
              </ul>


              <div class="tabs-content">
                <!--Tab-->
                <div class="tab active-tab" id="tab1">
               <div class="notification-widget ls-widget">
              <div class="widget-title">
                <h4>Съобщения</h4>
              </div>
              <hr>
              <div class="widget-content">
      
                 @if (Model.isMessagesEmpty && Model.Messages is not null)
                    {
                    <ul class="notification-list">
                     @await foreach (var entity in Model.Messages)
                     {
                        sender = await _userManager.FindByIdAsync(entity.SenderId);
                        SenderImageUrl = sender?.PictureName is not null && sender.PictureName.Contains("https://") ? sender?.PictureName : (_ImagePath + sender?.PictureName); 
                                            
                     <li>
                      <a asp-controller="Message" asp-action="Details" asp-route-id="@entity.Id" data-toggle="tooltip" data-placement="bottom" title="@entity.Title.Substring(0, 30)">
                      <img class="icon lazyload" style="left:0;" data-src="@SenderImageUrl"/><strong> @sender?.FirstName @sender?.LastName</strong><br>ви изпрати ново съобщение. 
                      <br>
                      <span class="colored">@entity.dateTime.ToString("MM MMMM")</span>
                       </a>
                     </li>

                     }
                     </ul>
                   }
     
                </div>
                </div>
                </div>
                <!--Tab-->
                <div class="tab" id="tab2">

               <div class="notification-widget ls-widget">
              <div class="widget-title">
                <h4>Задачи</h4>
              </div>
              <hr>
              <div class="widget-content">
      
                 @if (Model.MyTasks is not null)
                    {
                    <ul class="notification-list">
                     @await foreach (var entity in Model.MyTasks)
                     {
                     Model.SenderUser = await _userManager.FindByIdAsync(entity.SenderId);
                     SenderImageUrl = Model.SenderUser?.PictureName is not null && Model.SenderUser.PictureName.Contains("https://") ? Model.SenderUser?.PictureName : (_ImagePath + Model.SenderUser?.PictureName); 

                        switch (entity.Level)
                        {
                          case TaskLevel.Normal:
                            code = "нормална задача за вас";
                           break;
                          case TaskLevel.Video:
                            code = "видео разговор с вас";
                           break;

                        }
                                        
                     <li>
                      <a asp-controller="Message" asp-action="Details" asp-route-id="@entity.Id" data-toggle="tooltip" data-placement="bottom" title="@entity.About?.Substring(0, 30)">
                      <img class="icon lazyload" style="left:0;" data-src="@SenderImageUrl"/><strong> @Model.SenderUser?.FirstName @Model.SenderUser?.LastName<br> създаде @code.</strong>
                      <br>
                      <small>Начало: @entity.StartDate.ToString("MM/dd/yyyy h:mm tt")<br>Край: @entity.EndDate.ToString("MM/dd/yyyy h:mm tt")</small>
                       </a>
                     <hr>
                       </li>

                     }
                     </ul>
                   }
     
                </div>
                </div>

                </div>

                <!--Tab-->
                <div class="tab" id="tab3">
              <div class="notification-widget ls-widget">
              <div class="widget-title">
                <h4>Настройки</h4>
              </div>
              <hr>
              <ul class="widget-content">
                                
                                <li class="row m-1">
                                    <div class="col-sm-8">Известия</div>

                                        <form asp-controller="Notifications" asp-action="Enabling" asp-route-returnUrl="@Model.ReturnUrl" method="post" class="col-sm-4">
                                            @if (!Model.User.NotifyEnable)
                                            {
                                                <button class="btn btn-sm btn-success" type="submit"> Включи</button>
                                            }
                                            else
                                            {
                                                <button class="btn btn-sm btn-danger" type="submit"> Изключи</button>
                                            }
                                        </form>
                                </li>
                                <li class="row m-1">
                                <hr>
                                    <div class="col-sm-8">Съобщения</div>
                                        <form asp-controller="Message" asp-action="Enabling" asp-route-returnUrl="@Model.ReturnUrl" method="post" class="col-sm-4">
                                            @if (!Model.User.MessagesEnable)
                                            {
                                                <button class="btn btn-sm btn-success" type="submit"> Включи</button>
                                            }
                                            else
                                            {
                                                <button class="btn btn-sm btn-danger" type="submit"> Изключи</button>
                                            }
                                        </form>
        
                                </li>

                                <li class="row m-1">
                                    <div class="col-sm-8">Приложения</div>
                                        <form asp-controller="Account" asp-action="SignInSocialEnabling" asp-route-returnUrl="@Model.ReturnUrl" method="post" class="col-sm-4">
                                            @if (!Model.User.SignInSocialEnable)
                                            {
                                                <button class="btn btn-sm btn-success" type="submit"> Включи</button>
                                            }
                                            else
                                            {
                                                <button class="btn btn-sm btn-danger" type="submit"> Изключи</button>
                                            }
                                        </form>
                                </li>
                                <li class="row m-1">
                                    <div class="col-sm-8">Уведомяване по емайл</div>
                                        <form asp-controller="Account" asp-action="EmailNotifyEnabling" asp-route-returnUrl="@Model.ReturnUrl" method="post" class="col-sm-4">
                                            @if (!Model.User.EmailNotifyEnable)
                                            {
                                                <button class="btn btn-sm btn-success" type="submit"> Включи</button>
                                            }
                                            else
                                            {
                                                <button class="btn btn-sm btn-danger" type="submit"> Изключи</button>
                                            }
                                        </form>
                                        
                                </li>
                             </ul>
                </div>

            @*if (Model.User.Role.Equals(Roles.Admin))
            {
                <!--Tab-->
                <div class="tab" id="tab4">
              <div class="notification-widget ls-widget">
              <div class="widget-title">
                <h4>Системни грешки</h4>
              </div>
              <hr>
              <div class="widget-content">
      
                 @if (Model.Logs is not null)
                    {
                    <ul class="notification-list">
                     @await foreach (var entity in Model.Logs)
                                    {
                                        switch (entity.Code)
                                        {
                                            case LogLevel.Info:
                                                code = "info";
                                                break;
                                            case LogLevel.Warning:
                                                code = "warning";
                                                break;
                                            case LogLevel.Danger:
                                                code = "danger";
                                                break;

                                        }
                
                     <li>
                      <a href="#" data-toggle="tooltip" data-placement="bottom" title="@entity.Date.ToString("MM/dd/yyyy h:mm tt")">
                      <span class="icon fas fa-info-circle" style="left:0;"></span><strong> @entity.Title (@code)</strong><br>@entity.SenderId<br>
                      <br>
                      <span class="colored">@entity.ErrorPage</span>
                       </a>
                     </li>

                     }
                     </ul>
                   }
     
                </div>
                </div>
                </div>
            }*@
              </div>
            </div>
              </div>

            </div>
          </div>
        </div>
        </div>
        </div>
        </section>
        